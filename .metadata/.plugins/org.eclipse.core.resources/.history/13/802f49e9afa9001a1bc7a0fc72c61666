package steganography;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;

import javax.imageio.ImageIO;

public class RetrieveMessage {
	
	/**
	 * retrieve an (optionally encrypted) message in an image
	 * @param args
	 */
	public static void main(String[] args) {
		
		if (args.length != 1) {
			System.out.println("Program Exited: Number of arguments was not 1.");
			System.exit(1);
		}
		
		if (!args[0].endsWith(".png")) {
			System.out.println("Program Exited: File supplied was not a .png.");
			System.exit(1);
		}
		
		// Read the image file
		// Convert the image into a boolean array of ones and zeros/ trues and falses
		// read the lsb of each pixel (32 bits)
		// Convert those bits into characters
		// print the message
		
		BufferedImage image = null;
		
		try {
			image = ImageIO.read(new File(args[0]));
		} catch (IOException e) {
			System.out.println("Program Exited: Could not read image.");
			e.printStackTrace();
			System.exit(1);
		}
		
		int width = image.getWidth();
		int height = image.getHeight();
		
		System.out.println("Width: " + String.valueOf(width));
		System.out.println("Height: " + String.valueOf(height));
		
		int[][] pixels = new int[height][width];
		
		System.out.println("Reading pixels into pixels array...");
		
		for (int row = 0; row < height; row++) {
			for (int col = 0; col < width; col++) {
				pixels[row][col] += image.getRGB(col, row) & 0xFFF;
			}
		}
		
//		int[] pixelsArr = image.getRGB(0, 0, width, height, null, 0, width);
//		
//		for (int val : pixelsArr) {
//			val = val & 0xFFFFFF;
//		}
		
		System.out.println("Done reading into pixels String.");
		System.out.println("Creating file pixels.txt...");
		
		try {
			File f = new File("pixels.txt");
			System.out.println("File created.");
			FileWriter writer = new FileWriter(f);
			
			System.out.println("Writing pixels to pixels.txt...");
			
			for (int row = 0; row < height; row++) {
				for (int col = 0; col < width; col++) {
					writer.write(String.valueOf(pixels[row][col]));
					writer.write(", ");
				}
			}
			
			writer.close();
			System.out.println("Done!");
			
		} catch (IOException e) {
			System.out.println("Program Exited: Could not create file.");
			e.printStackTrace();
			System.exit(1);
		}
		
		
	}

}
